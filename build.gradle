plugins {
    id "groovy"
    id "maven-publish"
    id "com.jfrog.bintray" version "1.3.1"
}

import groovyx.net.http.HTTPBuilder
import static groovyx.net.http.ContentType.*
import static groovyx.net.http.Method.*

version = "0.9.1"
group = "com.monochromeroad.gradle-plugins"

repositories {
    jcenter()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {
    compile gradleApi()
    compile "net.java.dev.jets3t:jets3t:0.9.4"
    testCompile "org.spockframework:spock-core:1.0-groovy-2.3"
}

groovydoc {
    link("https://jets3t.s3.amazonaws.com/api/", "org.jets3t.")
    link("http://www.gradle.org/docs/current/javadoc/", "org.gradle.")
    link("http://docs.oracle.com/javase/1.7.0/docs/api/", "java.")
    groovyClasspath = configurations.compile
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = "sources"
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from('docs') {
        rename('no-java-source', "README")
    }
}
task groovydocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'groovydoc'
    from 'build/docs/groovydoc'
}
jar.dependsOn sourcesJar, javadocJar, groovydocJar

final pomConfig = {
    packaging "jar"
    name "Gradle Amazon S3 Sync Plugin"
    url "https://github.com/literalice/gradle-aws-s3-sync"
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    scm {
        url "https://github.com/literalice/gradle-aws-s3-sync"
        connection "https://github.com/literalice/gradle-aws-s3-sync"
    }
    developers {
        developer {
            id "literalice"
            name "Masatoshi Hayashi"
            email "literalice@monochromeroad.com"
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            artifact groovydocJar

            pom.withXml {
                final root = asNode()
                root.appendNode('description', 'The gradle task for synchronizing a local directory with a AWS S3 bucket.')
                root.children().last() + pomConfig
            }
        }
    }
}

ext {
    bintrayUser = project.has("bintrayUser") ? bintrayUser : ""
    bintrayKey = project.has("bintrayKey") ? bintrayKey : ""
}

bintray {
    user = bintrayUser
    key = bintrayKey
    publications = ["mavenJava"]
    pkg {
        repo = "maven"
        name = "gradle-aws-s3-sync"
        desc = "The gradle task for synchronizing a local directory with a AWS S3 bucket."
        licenses = ["Apache-2.0"]
        labels = ["gradle", "aws", "s3"]
        version {
            attributes = [ 'gradle-plugin': "com.monochromeroad.s3sync:${project.group}:${project.name}" ]
        }
    }
}

task bintraySign << {
    final http = new HTTPBuilder(bintray.apiUrl)
    http.headers.Authorization = "Basic ${"$bintrayUser:$bintrayKey".toString().bytes.encodeBase64()}"

    http.request(POST, JSON) {
        uri.path = "/gpg/${bintrayUser}/${bintray.pkg.repo}/${bintray.pkg.name}/versions/${project.version}"
        body = [passphrase: bintraySignPassphrase]
        response.success = { resp ->
            logger.info("Signed version ${project.version}.")
        }
        response.failure = { resp ->
            logger.error("Could not sign version ${project.version}: $resp.statusLine")
        }
    }
}

